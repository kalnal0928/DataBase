-- (a) 위의 두 테이블을 만드시오.

-- 부서 테이블 생성
CREATE TABLE 부서 (                          -- '부서'라는 이름의 테이블을 생성
    부서번호 VARCHAR(10) PRIMARY KEY,         -- 부서번호 컬럼: 최대 10자의 문자열, 기본키로 설정
    부서명 VARCHAR(50) NOT NULL,             -- 부서명 컬럼: 최대 50자의 문자열, 필수 입력(NULL 불가)
    예산 INT                                 -- 예산 컬럼: 정수형 데이터
);                                          -- 테이블 생성 구문 종료

-- 부서 데이터 삽입
INSERT INTO 부서 (부서번호, 부서명, 예산) VALUES  -- 부서 테이블의 지정된 컬럼들에 값을 삽입
('D001', '총무부', 8000),                    -- 첫 번째 행: D001번 총무부, 예산 8000
('D002', '인사부', 12000),                   -- 두 번째 행: D002번 인사부, 예산 12000
('D003', '기획부', 9000);                    -- 세 번째 행: D003번 기획부, 예산 9000

-- 사원 테이블 생성
CREATE TABLE 사원 (                          -- '사원'이라는 이름의 테이블을 생성
    사원번호 VARCHAR(10) PRIMARY KEY,         -- 사원번호 컬럼: 최대 10자의 문자열, 기본키로 설정
    사원명 VARCHAR(50) NOT NULL,             -- 사원명 컬럼: 최대 50자의 문자열, 필수 입력(NULL 불가)
    부서번호 VARCHAR(10),                     -- 부서번호 컬럼: 최대 10자의 문자열 (NULL 허용)
    월급여 INT,                              -- 월급여 컬럼: 정수형 데이터
    근무년수 INT,                            -- 근무년수 컬럼: 정수형 데이터
    FOREIGN KEY (부서번호) REFERENCES 부서(부서번호)  -- 외래키 설정: 부서번호가 부서 테이블의 부서번호를 참조
);                                          -- 테이블 생성 구문 종료

-- 사원 데이터 삽입
INSERT INTO 사원 (사원번호, 사원명, 부서번호, 월급여, 근무년수) VALUES  -- 사원 테이블의 지정된 컬럼들에 값을 삽입
('E100', '김영수', 'D001', 400, 10),          -- 첫 번째 행: E100번 김영수, D001 부서, 월급여 400, 근무년수 10년
('E101', '백영란', 'D002', 350, 5),           -- 두 번째 행: E101번 백영란, D002 부서, 월급여 350, 근무년수 5년
('E102', '최재훈', 'D002', 380, 7),           -- 세 번째 행: E102번 최재훈, D002 부서, 월급여 380, 근무년수 7년
('E103', '이은정', 'D003', 280, 3);           -- 네 번째 행: E103번 이은정, D003 부서, 월급여 280, 근무년수 3년

-- (b) 사원번호가 'E103'인 사원이 속한 부서명을 출력하시오.
SELECT 부서.부서명                            -- SELECT절: 부서 테이블의 부서명 컬럼을 선택하여 출력
FROM 사원                                   -- FROM절: 사원 테이블을 기본 테이블로 지정
JOIN 부서                                   -- JOIN절: 부서 테이블과 조인(결합)을 수행
ON 사원.부서번호 = 부서.부서번호              -- ON절: 조인 조건 - 사원 테이블의 부서번호와 부서 테이블의 부서번호가 같은 행들을 연결
WHERE 사원.사원번호 = 'E103';                -- WHERE절: 조건 - 사원 테이블의 사원번호가 'E103'인 행만 필터링

-- (c) 부서명별로 사원들의 평균 월급여를 출력하시오.
SELECT 부서.부서명, AVG(사원.월급여) AS 평균월급여  -- SELECT절: 부서명과 월급여의 평균값을 출력 (AS로 별칭 지정)
FROM 사원                                   -- FROM절: 사원 테이블을 기본 테이블로 지정
JOIN 부서                                   -- JOIN절: 부서 테이블과 조인을 수행
ON 사원.부서번호 = 부서.부서번호              -- ON절: 조인 조건 - 부서번호가 같은 행들을 연결
GROUP BY 부서.부서명;                        -- GROUP BY절: 부서명별로 그룹화하여 각 그룹의 평균을 계산

-- (d) '백영란'과 같은 부서에 근무하는 사원의 사원명과 부서명을 출력하시오.
SELECT s2.사원명, 부서.부서명                 -- SELECT절: 사원명과 부서명을 출력
FROM 사원 s1                                -- FROM절: 사원 테이블을 s1 별칭으로 지정 (백영란을 찾기 위한 테이블)
JOIN 사원 s2                                -- JOIN절: 같은 사원 테이블을 s2 별칭으로 다시 조인 (같은 부서 사원들을 찾기 위한 테이블)
ON s1.부서번호 = s2.부서번호                  -- ON절: 조인 조건 - 같은 부서번호를 가진 사원들을 연결
JOIN 부서                                   -- JOIN절: 부서 테이블과 조인하여 부서명을 가져옴
ON s2.부서번호 = 부서.부서번호                -- ON절: s2의 부서번호와 부서 테이블의 부서번호가 같은 행들을 연결
WHERE s1.사원명 = '백영란';                   -- WHERE절: s1에서 백영란을 찾는 조건

-- (e) 모든 사원의 근무년수를 1년 증가시킨 후에 사원 테이블을 출력하시오.
UPDATE 사원                                 -- UPDATE절: 사원 테이블의 데이터를 수정
SET 근무년수 = 근무년수 + 1;                 -- SET절: 근무년수 컬럼의 값을 현재 값에서 1을 더한 값으로 변경

-- 수정된 사원 테이블 출력
SELECT * FROM 사원;                         -- SELECT절: 사원 테이블의 모든 컬럼(*) 출력